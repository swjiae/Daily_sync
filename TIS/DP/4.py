
n, k = map(int, input().split())
knapsack = [[0 for _ in range(k + 1)] for _ in range(n + 1)]  # 배열

item = [[0, 0]]
for i in range(1, n + 1):  # 아이템 입력
    item.append(list(map(int, input().split())))

for i in range(1, n + 1):  # 아이템 개수만큼 반복
    for j in range(1, k + 1):  # 최대무게까지 반복

        weight = item[i][0]
        value = item[i][1]

        if j < weight:  # 가방에 넣을 수 없으면
            knapsack[i][j] = knapsack[i - 1][j]  # 위에 값 그대로 가져오기
        else: # 가방에 넣을 수 있으면
            knapsack[i][j] = max(knapsack[i - 1][j],value + knapsack[i][j - weight])
            # 위에 값 vs
            # 현재 아이템 가치 + 그전 단계에서 구한 남은무게의 가치

print(knapsack[n][k])

'''
한 달 후면 국가의 부름을 받게 되는 정싸피는 여행을 가려고 한다. 

세상과의 단절을 슬퍼하며 최대한 즐기기 위한 여행이기 때문에, 

가지고 다닐 배낭 또한 최대한 가치 있게 싸려고 한다.

정싸피가 여행에 필요하다고 생각하는 N개의 물건이 있다. 

각 물건은 무게 W와 가치 V를 가지는데, 해당 물건을 배낭에 넣어서 가면 정싸피가 V만큼 즐길 수 있다. 

아직 행군을 해본 적이 없는 정싸피는 최대 K만큼의 무게만을 넣을 수 있는 배낭만 들고 다닐 수 있다.
 
정싸피가 최대한 즐거운 여행을 하기 위해 배낭에 넣을 수 있는 물건들의 가치의 최댓값을 알려주자.


입력
첫 줄에 물품의 수 N(1 ≤ N ≤ 100)과 준서가 버틸 수 있는 무게 K(1 ≤ K ≤ 100,000)가 주어진다. 
두 번째 줄부터 N개의 줄에 거쳐 각 물건의 무게 W(1 ≤ W ≤ 100,000)와 
해당 물건의 가치 V(0 ≤ V ≤ 1,000)가 주어진다.
입력으로 주어지는 모든 수는 정수이며 제한시간은 2초 이다.

출력
한 줄에 배낭에 넣을 수 있는 물건들의 가치합의 최댓값을 출력한다.

4 7
6 13
4 8
3 6
5 12

출력
14
'''